apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: tenama
  name: tenama
  namespace: tenama-system
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: tenama
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: tenama
    spec:
      containers:
      - image: ghcr.io/payback159/tenama:main
        imagePullPolicy: Always
        name: tenama
        resources:
          requests:
            cpu: 100m
            memory: 150Mi
          limits:
            cpu: 200m
            memory: 150Mi
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /readiness
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 10
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
          - mountPath: /config/
            name: tenama-config
            readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: tenama
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: tenama-config
          secret:
            secretName: tenama-config

